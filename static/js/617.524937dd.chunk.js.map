{"version":3,"file":"static/js/617.524937dd.chunk.js","mappings":"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","sources":["api/api.js","hooks/useRequest.js","components/MovieDetailsComponent/movie-details.styled.js","components/MovieDetailsComponent/index.jsx","pages/MovieDetails/index.jsx","styles/components.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","const { useState } = require('react');\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n","import styled from 'styled-components';\n\nconst InfoSection = styled.div`\n  display: flex;\n  gap: 30px;\n  margin: 0 0 30px 0;\n`;\n\nconst MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nconst AdditionalList = styled.ul`\n  display: flex;\n  gap: 10px;\n  margin: 0 0 15px 0;\n`;\n\nexport { InfoSection, MovieDescription, GenresList, AdditionalList };\n","import { StyledLink } from 'styles/components.styled';\nimport {\n  AdditionalList,\n  GenresList,\n  InfoSection,\n  MovieDescription,\n} from './movie-details.styled';\n\nconst MovieDetailsComponent = ({ movie, from }) => {\n  const { poster_path, overview, title, release_date, genres, vote_average } =\n    movie ?? {};\n  const date = release_date?.split('-')[0];\n  const rating = (vote_average * 10)?.toFixed(0);\n\n  return (\n    <>\n      <InfoSection>\n        <img\n          height={500}\n          weight={500}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://i.imgur.com/jtwlswk.png'\n          }\n          alt={overview}\n        />\n        <MovieDescription>\n          <h2>{`${title} (${date})`}</h2>\n          <p>User score: {rating}%</p>\n          <h3>Overwiew</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres.map(({ id, name }) => (\n              <span key={id}>{name}</span>\n            ))}\n          </GenresList>\n        </MovieDescription>\n      </InfoSection>\n      <span>Additional information:</span>\n      <AdditionalList>\n        <li>\n          <StyledLink to=\"cast\" state={{ from }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from }}>\n            Reviews\n          </StyledLink>\n        </li>\n      </AdditionalList>\n    </>\n  );\n};\n\nexport default MovieDetailsComponent;\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink, Container } from 'styles/components.styled';\nimport MovieDetailsComponent from 'components/MovieDetailsComponent';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [movie, setMovie] = useState(null);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await api.getMovieDetails(movieId);\n        setMovie(data);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId, setError, setIsLoading]);\n\n  const { from } = state ?? {};\n\n  return (\n    <Container>\n      <BackLink to={from || '/'}>{'<- Back'}</BackLink>\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movie && <MovieDetailsComponent movie={movie} from={from} />\n      )}\n\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n`;\n\nconst StyledLink = styled(Link)`\n  color: blue;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  &.active {\n    color: red;\n  }\n`;\n\nconst BackLink = styled(StyledLink)`\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nexport { AppWrapper, StyledLink, StyledNavLink, BackLink, Container };\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","useState","require","useRequest","isLoading","setIsLoading","error","setError","InfoSection","styled","_templateObject","_taggedTemplateLiteral","MovieDescription","_templateObject2","GenresList","_templateObject3","AdditionalList","_templateObject4","_ref","_ref2","movie","from","poster_path","overview","title","release_date","genres","vote_average","date","split","rating","toFixed","_jsxs","_Fragment","children","_jsx","height","weight","src","alt","map","_ref3","id","name","StyledLink","to","state","MovieDetails","useParams","setMovie","useLocation","useEffect","api","message","getDetails","Container","BackLink","MovieDetailsComponent","Outlet","AppWrapper","Link","StyledNavLink","NavLink","_templateObject5"],"sourceRoot":""}