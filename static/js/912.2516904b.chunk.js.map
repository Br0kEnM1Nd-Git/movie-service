{"version":3,"file":"static/js/912.2516904b.chunk.js","mappings":"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","sources":["api/api.js","hooks/useRequest.js","components/MoviesSearch/movies.styled.js","components/MoviesSearch/SearchForm.jsx","components/MoviesSearch/index.jsx","pages/Movies/index.jsx","styles/components.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.orgg/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","import { useState } from 'react';\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n","import styled from 'styled-components';\n\nconst MoviesSearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 0 0 20px 0;\n`;\n\nconst MoviesList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nconst MoviesListItem = styled.li`\n  max-width: calc((100% - 30px) / 3);\n  box-shadow: 0 0 5px black;\n  padding: 5px;\n  & > a {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n  }\n`;\n\nconst MovieTitle = styled.h4`\n  word-wrap: break-word;\n`;\n\nconst MoviePoster = styled.img`\n  height: auto;\n  width: 250px;\n`;\n\nexport { MoviesSearchForm, MoviesList, MoviesListItem, MoviePoster, MovieTitle };\n","import { MoviesSearchForm } from './movies.styled';\n\nconst SearchForm = ({ handleSearch }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSearch(e.target.search.value);\n  };\n\n  return (\n    <MoviesSearchForm onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search movie\"\n        required\n        autoComplete=\"off\"\n      />\n      <button type=\"submit\">Search</button>\n    </MoviesSearchForm>\n  );\n};\n\nexport default SearchForm;\n","import { StyledLink } from 'styles/components.styled';\nimport {\n  MoviePoster,\n  MovieTitle,\n  MoviesList,\n  MoviesListItem,\n} from './movies.styled';\n\nconst MoviesSearch = ({ movies, search }) => {\n  return (\n    <MoviesList>\n      {movies.map(({ id, title, overview, poster_path }) => (\n        <MoviesListItem key={id}>\n          <StyledLink\n            to={`/movies/${id}`}\n            state={{ from: `/movies?${search}` }}\n          >\n            <MovieTitle>{title}</MovieTitle>\n            <MoviePoster\n              height={100}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : 'https://i.imgur.com/jtwlswk.png'\n              }\n              alt={overview}\n            />\n          </StyledLink>\n        </MoviesListItem>\n      ))}\n    </MoviesList>\n  );\n};\n\nexport default MoviesSearch;\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container } from 'styles/components.styled';\nimport SearchForm from 'components/MoviesSearch/SearchForm';\nimport MoviesSearch from 'components/MoviesSearch';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [search, setSearch] = useSearchParams();\n\n  useEffect(() => {\n    const searchParams = search.toString();\n    if (searchParams) {\n      setIsLoading(true);\n      setError(null);\n      const searchMovies = async () => {\n        try {\n          const { results: movies } = await api.searchMovies(searchParams);\n          setMovies(movies);\n        } catch ({ message }) {\n          setError(message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      searchMovies();\n    }\n  }, [search, setError, setIsLoading]);\n\n  const handleSearch = query => {\n    if (query) setSearch(`query=${query}`);\n  };\n\n  return (\n    <Container>\n      <SearchForm handleSearch={handleSearch} />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movies.length > 0 && <MoviesSearch movies={movies} search={search} />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n`;\n\nconst StyledLink = styled(Link)`\n  color: blue;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n  &.active {\n    color: red;\n  }\n`;\n\nconst BackLink = styled(StyledLink)`\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nexport { AppWrapper, StyledLink, StyledNavLink, BackLink, Container };\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","useRequest","isLoading","setIsLoading","useState","error","setError","MoviesSearchForm","styled","_templateObject","_taggedTemplateLiteral","MoviesList","_templateObject2","MoviesListItem","_templateObject3","MovieTitle","_templateObject4","MoviePoster","_templateObject5","_ref","handleSearch","_jsxs","onSubmit","e","preventDefault","target","search","value","children","_jsx","type","name","placeholder","required","autoComplete","movies","map","_ref2","id","title","overview","poster_path","StyledLink","to","state","from","height","src","alt","Movies","setMovies","setSearch","useSearchParams","useEffect","searchParams","toString","searchMovies","api","message","Container","SearchForm","length","MoviesSearch","AppWrapper","Link","StyledNavLink","NavLink","BackLink"],"sourceRoot":""}