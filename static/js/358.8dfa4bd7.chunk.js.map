{"version":3,"file":"static/js/358.8dfa4bd7.chunk.js","mappings":"8JAEAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEXD,EAAAA,EAAAA,SAAAA,QAAyB,+BA6BzB,MACA,EADY,IA3BZ,MACEE,oBACE,MAAM,KAAEC,SAAeH,EAAAA,EAAAA,IAAU,sBACjC,OAAOG,EAAKC,OACd,CAEAF,mBAAmBG,GACjB,MAAM,KAAEF,SAAeH,EAAAA,EAAAA,IAAU,gBAADM,OAAiBD,IACjD,OAAOF,CACT,CAEAD,sBAAsBK,GACpB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,IAC1C,OAAOJ,CACT,CAEAD,mBAAmBK,GACjB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,EAAO,aACjD,OAAOJ,CACT,CAEAD,sBAAsBK,GACpB,MAAM,KAAEJ,SAAeH,EAAAA,EAAAA,IAAU,SAADM,OAAUC,EAAO,aACjD,OAAOJ,CACT,E,4GC7BF,MAAMK,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAMpBC,EAAeH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iD,aCF9B,MAsDA,EAtDaG,KACX,MAAM,QAAEP,IAAYQ,EAAAA,EAAAA,OACd,UAAEC,EAAS,aAAEC,EAAY,MAAEC,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,MAC9CC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAkBjC,OAhBAC,EAAAA,EAAAA,YAAU,KACQtB,WACde,GAAa,GACbE,GAAS,GACT,IACE,MAAM,KAAEE,SAAeI,EAAAA,EAAAA,aAAiBlB,GACxCe,EAAQD,EAKV,CAJE,OAAO,QAAEK,IACTP,EAASO,EACX,CAAC,QACCT,GAAa,EACf,GAEFU,EAAS,GACR,CAACpB,EAASY,EAAUF,KAGrBW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,SACHd,GACCe,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDZ,GACFa,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,IAEJG,EAAKW,OAAS,IACZD,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SACNT,EAAKY,KAAIC,IAAA,IAAC,GAAEC,EAAE,KAAEC,EAAI,UAAEC,EAAS,aAAEC,GAAcJ,EAAA,OAC9CN,EAAAA,EAAAA,MAAChB,EAAY,CAAAkB,SAAA,EACXC,EAAAA,EAAAA,KAAA,OACEQ,OAAQ,IACRC,MAAO,IACPC,IACEH,EAAY,mCAAAhC,OAC2BgC,GACnC,kCAENI,IAAI,MAENd,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAOM,MACVR,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAYO,OAZEF,EAaJ,QAKtB,C,iCCxDP,MAAM,SAAEZ,GAAaoB,EAAQ,KAQ7B,EANmBvB,KACjB,MAAOJ,EAAWC,GAAgBM,GAAS,IACpCL,EAAOC,GAAYI,EAAS,MACnC,MAAO,CAAEP,YAAWC,eAAcC,QAAOC,WAAU,C","sources":["api/api.js","components/Cast/cast.styled.js","components/Cast/index.jsx","hooks/useRequest.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.params = {\n  api_key: 'ac8fbb226a37f835673d1586bcf6a4c6',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass Api {\n  async getTrending() {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  }\n\n  async searchMovies(query) {\n    const { data } = await axios.get(`search/movie?${query}`);\n    return data;\n  }\n\n  async getMovieDetails(movieId) {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  }\n\n  async getMovieCast(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  }\n\n  async getMovieReviews(movieId) {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  }\n}\n\nconst api = new Api();\nexport default api;\n","import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 10px;\n`;\n\nconst CastListItem = styled.li`\n  max-width: calc((100% - 40px) / 6);\n`;\n\nexport { CastList, CastListItem };\n","import api from 'api/api';\nimport useRequest from 'hooks/useRequest';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastListItem } from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading, error, setError } = useRequest();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      setIsLoading(true);\n      setError(false);\n      try {\n        const { cast } = await api.getMovieCast(movieId);\n        setCast(cast);\n      } catch ({ message }) {\n        setError(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId, setError, setIsLoading]);\n\n  return (\n    <>\n      <h4>Cast</h4>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        cast.length > 0 && (\n          <CastList>\n            {cast.map(({ id, name, character, profile_path }) => (\n              <CastListItem key={id}>\n                <img\n                  height={100}\n                  width={100}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://i.imgur.com/jtwlswk.png'\n                  }\n                  alt=\"\"\n                />\n                <p>Name: {name}</p>\n                <p>Character: {character}</p>\n              </CastListItem>\n            ))}\n          </CastList>\n        )\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const { useState } = require('react');\n\nconst useRequest = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  return { isLoading, setIsLoading, error, setError };\n};\n\nexport default useRequest;\n"],"names":["axios","api_key","async","data","results","query","concat","movieId","CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","Cast","useParams","isLoading","setIsLoading","error","setError","useRequest","cast","setCast","useState","useEffect","api","message","getCast","_jsxs","_Fragment","children","_jsx","length","map","_ref","id","name","character","profile_path","height","width","src","alt","require"],"sourceRoot":""}